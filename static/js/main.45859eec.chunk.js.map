{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","currentImage","setCurrentImage","maxImagesPosition","length","isDisabledPrev","isDisabledNext","className","style","width","height","transition","map","image","index","transform","src","alt","type","onClick","prev","Math","max","disabled","min","App","setBoxWidth","setFrameSize","setStep","setAnimationDuration","setInfinite","getMaxFrames","floor","action","htmlFor","id","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45859eec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const maxImagesPosition = images.length - frameSize;\n  const isDisabledPrev = currentImage === 0 && !infinite;\n  const isDisabledNext = currentImage === maxImagesPosition\n  && !infinite;\n\n  const handlePrev = () => (\n    currentImage !== 0\n      ? setCurrentImage(prev => Math.max(prev - step, 0))\n      : setCurrentImage(maxImagesPosition)\n  );\n\n  const handleNext = () => (\n    currentImage !== maxImagesPosition\n      ? setCurrentImage(prev => Math.min(prev + step, maxImagesPosition))\n      : setCurrentImage(0)\n  );\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__container\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          height: `${itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transform: `translateX(-${itemWidth * currentImage}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                className=\"Carousel__img\"\n                src={image}\n                alt={`Smile â„– ${index + 1}`}\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n\n        </ul>\n      </div>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          className=\"Carousel__button Carousel__button--active\"\n          type=\"button\"\n          onClick={handlePrev}\n          disabled={isDisabledPrev}\n        >\n          {'<<'}\n        </button>\n        <button\n          className=\"Carousel__button Carousel__button--active\"\n          type=\"button\"\n          onClick={handleNext}\n          disabled={isDisabledNext}\n          data-cy=\"next\"\n        >\n          {'>>'}\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nconst images: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [itemWidth, setBoxWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  const getMaxFrames = Math.floor(1300 / itemWidth);\n\n  const handleBoxWidth = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setBoxWidth(+event.target.value);\n  };\n\n  const handleFrameSize = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setFrameSize(+event.target.value);\n  };\n\n  const handleStep = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setStep(+event.target.value);\n  };\n\n  const handleAnimationDuration = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setAnimationDuration(+event.target.value);\n  };\n\n  const handleInfinite = () => {\n    setInfinite(!infinite);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <form className=\"App__form\" action=\"/\">\n\n        <label htmlFor=\"itemId\" className=\"App__label\">\n          Box Width:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"itemId\"\n            min={130}\n            max={390}\n            step={20}\n            value={itemWidth}\n            onChange={handleBoxWidth}\n          />\n        </label>\n\n        <label htmlFor=\"frameId\" className=\"App__label\">\n          Frame Size:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"frameId\"\n            min={1}\n            max={getMaxFrames}\n            step={1}\n            value={frameSize}\n            onChange={handleFrameSize}\n          />\n        </label>\n\n        <label htmlFor=\"stepId\" className=\"App__label\">\n          Step:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"stepId\"\n            min={1}\n            max={10}\n            step={1}\n            value={step}\n            onChange={handleStep}\n          />\n        </label>\n\n        <label htmlFor=\"animationId\" className=\"App__label\">\n          Animation Duration:\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"animationId\"\n            min={500}\n            max={5000}\n            step={500}\n            value={animationDuration}\n            onChange={handleAnimationDuration}\n          />\n        </label>\n\n        <label htmlFor=\"infiniteId\" className=\"App__label\">\n          Infinite:\n          <input\n            className=\"App__input App__bigInpute\"\n            type=\"checkbox\"\n            id=\"infiniteId\"\n            value={animationDuration}\n            onChange={handleInfinite}\n          />\n        </label>\n\n      </form>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}